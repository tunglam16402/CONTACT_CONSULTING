import { NextRequest } from "next/server";
import { createResponse, createErrorResponse } from "../config";
import { ApiError } from "@/types/api";
import { appendToSheet, RegistrationData } from "@/lib/google-sheets";

export async function POST(request: NextRequest) {
  try {
    // Ki·ªÉm tra bi·∫øn m√¥i tr∆∞·ªùng
    if (
      !process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL ||
      !process.env.GOOGLE_PRIVATE_KEY ||
      !process.env.GOOGLE_SHEET_ID
    ) {
      throw new ApiError(
        "Thi·∫øu th√¥ng tin Google API trong bi·∫øn m√¥i tr∆∞·ªùng.",
        500,
        "ENV_ERROR"
      );
    }

    const body = await request.json();
    console.log("üì© Received data:", body);

    // Chu·∫©n b·ªã d·ªØ li·ªáu ƒëƒÉng k√Ω
    const registrationData: RegistrationData = {
      ...body,
      registrationDate: new Date().toISOString(),
    };

    console.log("‚úÖ Prepared data:", registrationData);

    // Ghi d·ªØ li·ªáu v√†o Google Sheets
    await appendToSheet(registrationData);

    return createResponse(
      {
        message: "Th√¥ng tin ƒëƒÉng k√Ω c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c ti·∫øp nh·∫≠n!",
        data: registrationData,
      },
      201
    );
  } catch (error) {
    console.error(
      "‚ùå Registration error:",
      error instanceof Error ? error.message : error
    );

    if (error instanceof ApiError) {
      return createErrorResponse(error);
    } else {
      return createErrorResponse(
        new ApiError(
          "L·ªói kh√¥ng x√°c ƒë·ªãnh, vui l√≤ng th·ª≠ l·∫°i.",
          500,
          "UNKNOWN_ERROR"
        )
      );
    }
  }
}
